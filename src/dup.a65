	.IF PLATFORM  <= 1
		.A8
		.I8
	.ENDIF
	
	.IF PLATFORM = 2 || PLATFORM = 4
		.include "fat16.inc"
		.include "atarixl.inc"

FNAME		= $500
FVEC		= $2E0
FINIT		= $2E2

		.ORG DUPCODE
	.ENDIF

	.IF PLATFORM = 3
		.include "fat16.inc"
		.include "homebrew.inc"
		.include "myos.inc"

		DUPCODE		= $0A00
		.ORG DUPCODE
	.ENDIF
;
;
;
		JMP	DUPINIT
		JMP	LOADFIL
		
DUPINIT:	LDA	#0
		LDX	#31
DUPINIT1:	STA	FNAME,x
		DEX
		BPL	DUPINIT1
		LDA	#$4C
		STA	JMPIND

	.IF PLATFORM = 2 || PLATFORM = 4
		LDX	#$70
		LDA	#OPEN
		STA 	ICCOM,X
		LDA 	#4
		STA 	ICAX1,X
		STA 	ICBLH,X
		LDA 	#<KBDNAME
		STA 	ICBAL,X
		LDA 	#>KBDNAME
		STA 	ICBAH,X
		LDA 	#0
		STA 	ICBLL,X
		STA 	ICAX2,X
		JSR 	CIOV
	.ENDIF

MENU:		CLC
		LDX	#<DUPMENU
		LDA	#>DUPMENU
		JSR	JPRINTSTR
	
		JSR 	GETCHAR
		JSR	JPRINT

		LDX	#8
FINDCMD:	CMP	CMDTABXIO,X
		BEQ	DOCMD
		DEX
		BPL	FINDCMD
		BMI	MENU

DOCMD:		CPX	#4
		BCC	DOXIO
		TXA
		SBC	#4		;carry set = 4
		ASL
		TAX
		LDA	JMPTAB+1,X
		PHA
		LDA	JMPTAB,X
		PHA
		RTS

DOXIO:		LDA	XIOCMD,X
		LDX	#$10
		STA	ICCOM,X
		
		JSR 	PRINTSPEC

		JSR 	GETSTR
		BMI 	ERR
		
		JSR 	CORRNAME
		
		LDX	#$10
		JSR 	FOPEN3
		BMI 	ERR
		BPL 	MENU


		
EXIT:		TSX
		CPX	#$FF
		BEQ	MENU
EXIT1:		RTS	
		

PRINTSPEC:	CLC
		LDX	#<SPECSTR
		LDA	#>SPECSTR
		JMP	JPRINTSTR


GOTOADR:	CLC
		LDX	#<GOTOSTR
		LDA	#>GOTOSTR
		JSR	JPRINTSTR
		
		JSR 	ENTERADR
		CMP 	#'X'
		BEQ 	MENU
		JSR 	GOTOADR1
		JMP 	MENU
GOTOADR1:	JMP 	(ASTART)
		
DIR:		JSR 	PRINTSPEC
		
		JSR 	GETSTR
		BMI 	ERR
		
		LDA 	FNAME		;only EOL entered?
		CMP 	#EOL
		BNE 	DIR4		;no
		
		LDX 	#5		;replace with D:*.*
DIR3:		LDA 	DEFSPEC,X
		STA 	FNAME,X
		DEX	
		BPL 	DIR3
		
DIR4:		JSR 	CORRNAME
				
		JSR 	FOPENDIR
		BMI 	ERR
		
DIR1:		JSR 	FGETDIR
		BMI 	DIR2		
		
		CLC
		LDX 	#<FNAME
		LDA 	#>FNAME
		JSR 	JPRINTSTR		
		JMP 	DIR1
		
DIR2:		JSR 	FCLOSE
		JSR 	GETCHAR
		JMP 	MENU
		
ERR:		TYA	
		PHA	
		JSR 	FCLOSE
	
		CLC
		LDX	#<ERRSTR
		LDA	#>ERRSTR
		JSR	JPRINTSTR
		
		PLA	
ERRPRT:		JSR 	JPUTHEX
		JSR 	GETCHAR
		JMP 	MENU

;-------------------------------------------------------------------------------
; Load File
; - Print Filespec
; - Get String
; - Load file in Chunks
;-------------------------------------------------------------------------------	
LOAD:		JSR 	PRINTSPEC	
		JSR 	GETSTR
		BMI 	ERR
		JSR 	LOADFIL
		BMI 	ERRPRT
		JMP 	MENU
			
	
LOADFIL:	LDA 	#<LABRTS
		STA 	FVEC
		LDA 	#>LABRTS
		STA 	FVEC+1
	
		JSR 	CORRNAME
	
		JSR 	FOPEN
		BMI 	ERR1				
		JSR 	FGETST		;get 2 bytes in ASTART
		BMI 	ERR1

		LDA 	#$FF		;check if first 2-bytes are $FF
		CMP 	ASTART		;if not, close and exit
		BNE 	MCLOSE
		CMP 	ASTART+1
		BNE 	MCLOSE
		
LOADCHU1:	JSR 	FGETST		;get start address
		BMI 	ERR1
LOADCHU:	JSR 	FGETEND		;get end address
		BMI 	ERR1
		JSR 	FGETCHUN	;read chunk of data
		BMI 	ERR1
		
		LDA 	FINIT		;init this chunk
		STA 	JMPPTR
		LDA 	FINIT+1
		STA 	JMPPTR+1
		JSR 	JMPIND
		
		JSR 	FGETST		;read next 2-bytes
		CPY 	#EOFERR		;EOF?
		BEQ 	FGOTO		;yes, try to start the file
		TYA
		BMI 	ERR1		;error?
		
		LDA 	#$FF		;skip if $FF $FF 
		CMP 	ASTART
		BNE 	LOADCHU
		CMP 	ASTART+1
		BNE 	LOADCHU
		BEQ 	LOADCHU1
	
ERR1:		TYA	
		PHA	
		JSR 	FCLOSE
		PLA
		TAY
		RTS	
		
MCLOSE:		JMP 	FCLOSE

				
FGOTO:		JSR 	FCLOSE
;		SEC
;		LDX	#<READYSTR
;		LDA	#>READYSTR
;		JSR	JPRINTSTR
;		JSR	GETCHAR

		LDA	#4					;key still pressed
FGOTO1:		BIT	SKSTAT			
		BEQ	FGOTO1					;yes, loop
		
		LDA 	FVEC
		STA 	JMPPTR
		LDA 	FVEC+1
		STA 	JMPPTR+1
		JSR 	JMPIND
		LDA	#SUCCES
		RTS	

SAVE:		LDX	#<FROMSTR
		LDA	#>FROMSTR
		JSR	JPRINTSTR
		JSR 	ENTERADR
		CMP 	#'X'
		BNE	SAVE1
		JMP 	MENU

SAVE1:		LDA	ASTART
		STA	FSTARTS
		LDA	ASTART+1
		STA	FSTARTS+1
		
	.IF PLATFORM <= 1
		SEC
	.ELSE
		CLC
	.ENDIF
		LDX	#<TOSTR
		LDA	#>TOSTR
		JSR	JPRINTSTR
		JSR 	ENTERADR
		CMP 	#'X'
		BNE	SAVE2
		JMP 	MENU

SAVE2:		LDA	ASTART
		STA	FENDS
		LDA	ASTART+1
		STA	FENDS+1

		LDA	FENDS+1
		CMP	FSTARTS+1
		BCS	SAVE8
		JMP	MENU
SAVE8:		LDA	FENDS
		CMP	FSTARTS
		BCS	SAVE9
		JMP	MENU
		
SAVE9:		LDX	#$FF
		STX	FHEADER
		STX	FHEADER+1
		INX
		STX	FDIFF
		STX	FDIFF+1

		CLC
		LDX	#<INTOSTR
		LDA	#>INTOSTR
		JSR	JPRINTSTR
		JSR 	ENTERADR
		CMP	#'X'
		BEQ	SAVE10
		
		SEC
		LDA	FSTARTS
		SBC	ASTART
		STA	FDIFF
		LDA	FSTARTS+1
		SBC	ASTART+1
		STA	FDIFF+1
		
SAVE10:		SEC
		LDA	FSTARTS
		SBC	FDIFF
		STA	FSTART
		LDA	FSTARTS+1
		SBC	FDIFF+1
		STA	FSTART+1
		
		SEC
		LDA	FENDS
		SBC	FDIFF
		STA	FEND
		LDA	FENDS+1
		SBC	FDIFF+1
		STA	FEND+1
		
	.IF PLATFORM <= 1
		SEC
	.ELSE
		CLC
	.ENDIF
		LDX	#<(SPECSTR+3)
		LDA	#>(SPECSTR+3)
		JSR	JPRINTSTR	
		
		JSR 	GETSTR
		BPL	SAVE3
		JMP 	ERR
SAVE3:		JSR 	CORRNAME

		CLC
		LDX	#<APPENDSTR
		LDA	#>APPENDSTR
		JSR	JPRINTSTR
		
		JSR 	GETCHAR
		TAY
		JSR	JPRINT
		
		LDX 	#$10
		LDA 	#OPEN
		STA 	ICCOM,X
		LDA	#8
		CPY	#'Y'
		BNE	SAVE7
		ORA	#1
SAVE7:		JSR	FOPEN2
		BPL	SAVE4
		JMP	ERR
		
SAVE4:		LDA	#PUTCHR
		STA	ICCOM,X
		LDA	#6
		STA	ICBLL,X
		LDA	#0
	.IF PLATFORM  <= 1
		STA	ICBAB,X
		STA	ICBLB,X
	.ENDIF
		STA	ICBLH,X
		LDA	#<FHEADER
		STA	ICBAL,X
		LDA	#>FHEADER
		STA	ICBAH,X
		JSR	CIOV
		BMI	SAVECLOSE
		
SAVE6:		LDA	FSTARTS
		STA	ICBAL,X
		LDA	FSTARTS+1
		STA	ICBAH,X
		LDA	FENDS
		SBC	FSTARTS
		STA	ICBLL,X
		LDA	FENDS+1
		SBC	FSTARTS+1
		STA	ICBLH,X
		INC	ICBLL,X
		BNE	SAVE5
		INC	ICBLH,X
SAVE5:		JSR	CIOV
SAVECLOSE:	JSR	FCLOSE
		JMP	MENU
		
LABRTS:		RTS

	.IF PLATFORM=99
DEBUG:		LDA	ASTART
		JSR	JPUTHEX
		LDA	ASTART+1
		JSR	JPUTHEX
		LDA	AEND
		JSR	JPUTHEX
		LDA	AEND+1
		JSR	JPUTHEX
		LDA	FVEC
		JSR	JPUTHEX
		LDA	FVEC+1
		JSR	JPUTHEX
		LDA	FINIT
		JSR	JPUTHEX
		LDA	FINIT+1
		JSR	JPUTHEX
		RTS
	.ENDIF
	
CORRNAME:	LDA 	#':'
		CMP 	FNAME+1
		BEQ 	LABRTS
		CMP 	FNAME+2
		BEQ 	LABRTS
	
		LDX 	#0
CORRNAM2:	LDA 	FNAME,X
		CMP 	#EOL
		BEQ 	CORRNAM1
		INX	
		BNE 	CORRNAM2
			
CORRNAM1:	LDA 	FNAME,X
		STA 	FNAME+2,X
		DEX	
		BPL 	CORRNAM1	
		LDA 	#DRVCHAR
		STA 	FNAME
		LDA 	#':'
		STA 	FNAME+1
		RTS	
	
FGETCHUN:	LDA 	ASTART+1
		JSR 	JPUTHEX
		LDA 	ASTART
		JSR 	JPUTHEX
		LDA 	#'-'
		JSR 	JPRINT
		LDA 	AEND+1
		JSR 	JPUTHEX
		LDA 	AEND
		JSR 	JPUTHEX
		LDA 	#EOL
		JSR 	JPRINT	
		
		LDA 	#<LABRTS
		STA 	FINIT
		LDA 	#>LABRTS
		STA 	FINIT+1
		
		LDX 	#$10
		SEC	
	.IF PLATFORM  <= 1
		LDA	#0
		STA	ICBAB,X
		STA	ICBLB,X
	.ENDIF
		
		LDA 	AEND
		SBC 	ASTART
		STA 	ICBLL,X
		LDA 	AEND+1
		SBC 	ASTART+1
		STA 	ICBLH,X
		INC 	ICBLL,X
		BNE 	FGETCHU1
		INC 	ICBLH,X
	
FGETCHU1:	LDA 	ASTART
		STA 	ICBAL,X
		LDA 	ASTART+1
		STA 	ICBAH,X

		JMP 	FGET
;	
;	
;	
FGETDIR:	LDX 	#$10
		LDA 	#GETREC
		STA 	ICCOM,X
		JMP 	FOPEN3
		
FGETST:		LDX 	#$10				;read 2 bytes to ASTART
		LDA 	#<ASTART
		STA 	ICBAL,X
		LDA 	#>ASTART
		STA 	ICBAH,X
		JMP 	FGET2
		
FGETEND:	LDX 	#$10
		LDA 	#<AEND
		STA 	ICBAL,X
		LDA 	#>AEND
		STA 	ICBAH,X
		
FGET2:		LDA 	#2
		STA 	ICBLL,X
		LDA 	#0
		STA 	ICBLH,X
	.IF PLATFORM  <= 1
		STA	ICBAB,X
		STA	ICBLB,X
	.ENDIF
		
		JMP 	FGET
		
GETSTR:		LDX 	#0
		LDA 	#GETREC
		STA 	ICCOM,X
		BNE 	FOPEN3
		
FOPEN:		LDX 	#$10
		LDA 	#OPEN
		STA 	ICCOM,X
FOPEN1:		LDA 	#4
FOPEN2:		STA 	ICAX1,X
FOPEN3:		LDA 	#<FNAME
		STA 	ICBAL,X
		LDA 	#>FNAME
		STA 	ICBAH,X
		LDA 	#0
	.IF PLATFORM  <= 1
		STA	ICBAB,X
		STA	ICBLB,X
	.ENDIF
		STA 	ICBLL,X
		STA 	ICAX2,X
		LDA 	#1
		STA 	ICBLH,X
		JMP 	CIOV
	
FOPENDIR:	LDX 	#$10
		LDA 	#OPEN
		STA 	ICCOM,X
		LDA 	#6
		JMP 	FOPEN2
	
FGET:		LDA 	#GETCHR
		STA 	ICCOM,X
		JMP 	CIOV
	
FCLOSE:		LDX 	#$10
FCLOSE1:	LDA 	#CLOSE
		STA 	ICCOM,X
		JMP 	CIOV
	
ENTERADR:	LDA	#0
		STA	ASTART
		STA	ASTART+1
		LDA	#4
		STA	CNT
		
ENTERADRC:	JSR	GETCHAR
		CMP	#EOL
		BEQ	ENTERADREND
	
		CMP	#'X'
		BNE	ENTERADRD
		RTS
	
ENTERADRD:	JSR	JPRINT
		CMP	#':'
		BCS	ENTERADRE
		CMP	#'0'
		BCC	ENTERADRC
	
		AND	#%00001111
		BCS	ENTERADRF
	
ENTERADRE:	CMP	#'G'
		BCS	ENTERADRC
		CMP	#'A'
		BCC	ENTERADRC
	
		SBC	#'7'
ENTERADRF:	ASL
		ASL
		ASL
		ASL
		LDX	#4
ENTERADRG:	ASL
		ROL	ASTART
		ROL	ASTART+1
		DEX
		BNE	ENTERADRG

		DEC	CNT
		BNE	ENTERADRC
ENTERADREND:	LDA	#EOL
		JMP	JPRINT		
		
GETCHAR:	LDX	#$70
		LDA	#GETCHR
		STA 	ICCOM,X
		LDA 	#0
		STA 	ICBLL,X
		STA 	ICBLH,X
	.IF PLATFORM <= 1
		STA 	ICBLB,X
	.ENDIF
		JSR 	CIOV
		
UPPER:		cmp	#'a'
		bcc	UPPEREND
		cmp	#'z'+1
		bcs	UPPEREND
		sbc	#$1F
UPPEREND:	rts
		
		
;
DUPMENU:	.byte CLS
		.byte "FAT-1"
	.IF PLATFORM = 4
		.byte "2"
	.ELSE	
		.byte "6"
	.ENDIF
		.byte " DOS (c) by R. Scholz"
		.byte EOL,EOL
		.byte "A - Display Dir"
		.byte EOL
		.byte "C - Change  Dir"
		.byte EOL
		.byte "D - Delete  File"
		.byte EOL
		.byte "G - Goto    Address"
		.byte EOL
		.byte "L - Load    File"
		.byte EOL
		.byte "M - Create  Dir"	
		.byte EOL
		.byte "R - Rename  File"	
		.byte EOL
		.byte "S - Save    File"	
		.byte EOL		
		.byte "X - Exit"
		.byte EOL,EOL
		.byte 0

CMDTABXIO:	.byte "CDMR"
CMDTAB:		.byte "AGLSX"
XIOCMD:		.byte CCHADIR, CDELETE, CCREDIR, CRENAME
JMPTAB:		.word DIR-1, GOTOADR-1, LOAD-1, SAVE-1, EXIT-1
	
READYSTR:	.byte "press any key.",0
SPECSTR:	.byte " - FILESPEC:"
		.byte 0
ERRSTR:		.byte "ERROR: "
		.byte 0
DEFSPEC:	.byte DRVCHAR, ":*.*"
		.byte EOL

FROMSTR:	.byte " - FROM:",0
TOSTR:		.byte "      TO:",0 
INTOSTR:	.byte "    INTO:",0
APPENDSTR:	.byte "  APPEND:",0
GOTOSTR:	.byte " - ADDRESS:"
		.byte 0
		
KBDNAME:	.byte	"K:",EOL